"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/translate/route";
exports.ids = ["app/api/translate/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftranslate%2Froute&page=%2Fapi%2Ftranslate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftranslate%2Froute.ts&appDir=%2FUsers%2Fjobssu%2FDesktop%2Fmyhos%2Fpdf-translator%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjobssu%2FDesktop%2Fmyhos%2Fpdf-translator&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftranslate%2Froute&page=%2Fapi%2Ftranslate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftranslate%2Froute.ts&appDir=%2FUsers%2Fjobssu%2FDesktop%2Fmyhos%2Fpdf-translator%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjobssu%2FDesktop%2Fmyhos%2Fpdf-translator&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_jobssu_Desktop_myhos_pdf_translator_src_app_api_translate_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/translate/route.ts */ \"(rsc)/./src/app/api/translate/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/translate/route\",\n        pathname: \"/api/translate\",\n        filename: \"route\",\n        bundlePath: \"app/api/translate/route\"\n    },\n    resolvedPagePath: \"/Users/jobssu/Desktop/myhos/pdf-translator/src/app/api/translate/route.ts\",\n    nextConfigOutput,\n    userland: _Users_jobssu_Desktop_myhos_pdf_translator_src_app_api_translate_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/translate/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ0cmFuc2xhdGUlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnRyYW5zbGF0ZSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnRyYW5zbGF0ZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmpvYnNzdSUyRkRlc2t0b3AlMkZteWhvcyUyRnBkZi10cmFuc2xhdG9yJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmpvYnNzdSUyRkRlc2t0b3AlMkZteWhvcyUyRnBkZi10cmFuc2xhdG9yJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN5QjtBQUN0RztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3BkZi10cmFuc2xhdG9yLz8xYjM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9qb2Jzc3UvRGVza3RvcC9teWhvcy9wZGYtdHJhbnNsYXRvci9zcmMvYXBwL2FwaS90cmFuc2xhdGUvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3RyYW5zbGF0ZS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3RyYW5zbGF0ZVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvdHJhbnNsYXRlL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2pvYnNzdS9EZXNrdG9wL215aG9zL3BkZi10cmFuc2xhdG9yL3NyYy9hcHAvYXBpL3RyYW5zbGF0ZS9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvdHJhbnNsYXRlL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftranslate%2Froute&page=%2Fapi%2Ftranslate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftranslate%2Froute.ts&appDir=%2FUsers%2Fjobssu%2FDesktop%2Fmyhos%2Fpdf-translator%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjobssu%2FDesktop%2Fmyhos%2Fpdf-translator&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/translate/route.ts":
/*!****************************************!*\
  !*** ./src/app/api/translate/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_translators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/translators */ \"(rsc)/./src/lib/translators/index.ts\");\n\n\n// 获取简化的语言代码\nfunction getSimpleLanguageCode(targetLanguage) {\n    // 从完整的语言代码中提取简化版本\n    // 例如：'zh-CN' -> 'zh', 'en-US' -> 'en'\n    return targetLanguage.split(\"-\")[0];\n}\n// 模拟翻译API调用\nasync function mockTranslate(text, provider, targetLanguage, apiKey) {\n    // 在实际应用中，这里会调用真实的翻译API\n    // 例如Google Translate API, DeepL API, OpenAI API等\n    // 检查API密钥\n    if (!apiKey && provider !== \"google\") {\n        return `[错误] 未配置${provider}的API密钥，请在设置页面配置API密钥`;\n    }\n    // 为了演示，我们使用简单的模拟翻译\n    await new Promise((resolve)=>setTimeout(resolve, 2000)); // 模拟API延迟\n    // 获取简化的语言代码\n    const simpleCode = getSimpleLanguageCode(targetLanguage);\n    // 根据目标语言返回不同的模拟翻译结果\n    const prefixMap = {\n        zh: \"这是中文翻译: \",\n        en: \"This is English translation: \",\n        ja: \"これは日本語の翻訳です: \",\n        ko: \"이것은 한국어 번역입니다: \",\n        fr: \"Ceci est une traduction fran\\xe7aise: \",\n        de: \"Dies ist eine deutsche \\xdcbersetzung: \",\n        es: \"Esta es una traducci\\xf3n al espa\\xf1ol: \",\n        ru: \"Это русский перевод: \",\n        it: \"Questa \\xe8 una traduzione italiana: \",\n        pt: \"Esta \\xe9 uma tradu\\xe7\\xe3o em portugu\\xeas: \"\n    };\n    const prefix = prefixMap[simpleCode] || \"Translation: \";\n    // 添加提供商信息\n    const providerInfo = `[通过 ${provider} 翻译]`;\n    // 截取原文的前100个字符作为模拟翻译的一部分\n    const sampleText = text.length > 100 ? text.substring(0, 100) + \"...\" : text;\n    return `${prefix}${sampleText}\\n\\n${providerInfo}`;\n}\nasync function POST(request) {\n    try {\n        const { text, provider, targetLanguage, fileName } = await request.json();\n        // 验证请求参数\n        if (!text) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"翻译文本不能为空\"\n            }, {\n                status: 400\n            });\n        }\n        if (!provider || !targetLanguage) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"缺少翻译服务或目标语言参数\"\n            }, {\n                status: 400\n            });\n        }\n        // 检查API密钥\n        let apiKeyMissing = false;\n        let apiKeyName = \"\";\n        if (provider === \"openai\" && !process.env.OPENAI_API_KEY) {\n            apiKeyMissing = true;\n            apiKeyName = \"OpenAI API密钥\";\n        } else if (provider === \"deepseek\" && !process.env.DEEPSEEK_API_KEY) {\n            apiKeyMissing = true;\n            apiKeyName = \"DeepSeek API密钥\";\n        } else if (provider === \"google\" && !process.env.GOOGLE_API_KEY) {\n            apiKeyMissing = true;\n            apiKeyName = \"Google API密钥\";\n        } else if (provider === \"baidu\" && (!process.env.BAIDU_APP_ID || !process.env.BAIDU_APP_KEY)) {\n            apiKeyMissing = true;\n            apiKeyName = \"百度翻译API密钥\";\n        }\n        if (apiKeyMissing) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                originalText: text,\n                translatedText: `[错误] 未配置${apiKeyName}，请在设置页面配置API密钥`,\n                provider,\n                targetLanguage,\n                fileName,\n                timestamp: Date.now()\n            });\n        }\n        // 调用翻译服务\n        const translationResult = await (0,_lib_translators__WEBPACK_IMPORTED_MODULE_1__.translateText)({\n            text,\n            provider: provider,\n            targetLanguage\n        });\n        // 返回翻译结果\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ...translationResult,\n            fileName,\n            timestamp: Date.now()\n        });\n    } catch (error) {\n        console.error(\"翻译API错误:\", error);\n        // 返回错误信息\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"处理翻译请求时出错\",\n            message: error instanceof Error ? error.message : String(error)\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/translate/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/translators/index.ts":
/*!**************************************!*\
  !*** ./src/lib/translators/index.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   translateText: () => (/* binding */ translateText),\n/* harmony export */   translateWithBaidu: () => (/* binding */ translateWithBaidu),\n/* harmony export */   translateWithDeepSeek: () => (/* binding */ translateWithDeepSeek),\n/* harmony export */   translateWithGoogle: () => (/* binding */ translateWithGoogle),\n/* harmony export */   translateWithOpenAI: () => (/* binding */ translateWithOpenAI)\n/* harmony export */ });\n/**\n * 翻译文本\n * @param request 翻译请求\n * @returns 翻译响应\n */ async function translateText(request) {\n    const { text, provider, targetLanguage } = request;\n    try {\n        let translatedText = \"\";\n        // 根据选择的翻译服务进行翻译\n        switch(provider){\n            case \"openai\":\n                translatedText = await translateWithOpenAI(text, targetLanguage);\n                break;\n            case \"deepseek\":\n                translatedText = await translateWithDeepSeek(text, targetLanguage);\n                break;\n            case \"baidu\":\n                translatedText = await translateWithBaidu(text, targetLanguage);\n                break;\n            case \"google\":\n                translatedText = await translateWithGoogle(text, targetLanguage);\n                break;\n            default:\n                throw new Error(`不支持的翻译服务: ${provider}`);\n        }\n        return {\n            originalText: text,\n            translatedText,\n            provider,\n            targetLanguage,\n            timestamp: Date.now()\n        };\n    } catch (error) {\n        console.error(`翻译失败 (${provider}):`, error);\n        throw error;\n    }\n}\n/**\n * 使用OpenAI API进行翻译\n * @param text 要翻译的文本\n * @param targetLanguage 目标语言\n * @returns 翻译后的文本\n */ async function translateWithOpenAI(text, targetLanguage) {\n    try {\n        // 获取API密钥\n        const apiKey = process.env.OPENAI_API_KEY;\n        if (!apiKey) {\n            throw new Error(\"未配置OpenAI API密钥\");\n        }\n        // 构建API请求\n        const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${apiKey}`\n            },\n            body: JSON.stringify({\n                model: \"gpt-3.5-turbo\",\n                messages: [\n                    {\n                        role: \"system\",\n                        content: `你是一个专业的翻译助手。请将以下文本翻译成${getLanguageName(targetLanguage)}，保持原文的格式和语气，确保翻译准确、自然、流畅。只返回翻译结果，不要添加任何解释或额外内容。`\n                    },\n                    {\n                        role: \"user\",\n                        content: text\n                    }\n                ],\n                temperature: 0.3\n            })\n        });\n        const data = await response.json();\n        return data.choices[0].message.content.trim();\n    } catch (error) {\n        throw new Error(`OpenAI翻译失败: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n/**\n * 使用DeepSeek API进行翻译\n * @param text 要翻译的文本\n * @param targetLanguage 目标语言\n * @returns 翻译后的文本\n */ async function translateWithDeepSeek(text, targetLanguage) {\n    try {\n        // 获取API密钥\n        const apiKey = process.env.DEEPSEEK_API_KEY;\n        if (!apiKey) {\n            throw new Error(\"未配置DeepSeek API密钥\");\n        }\n        // 构建API请求\n        const response = await fetch(\"https://api.deepseek.com/v1/chat/completions\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${apiKey}`\n            },\n            body: JSON.stringify({\n                model: \"deepseek-chat\",\n                messages: [\n                    {\n                        role: \"system\",\n                        content: `你是一个专业的翻译助手。请将以下文本翻译成${getLanguageName(targetLanguage)}，保持原文的格式和语气，确保翻译准确、自然、流畅。只返回翻译结果，不要添加任何解释或额外内容。`\n                    },\n                    {\n                        role: \"user\",\n                        content: text\n                    }\n                ],\n                temperature: 0.3,\n                max_tokens: 4000\n            })\n        });\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(`DeepSeek API 错误: ${JSON.stringify(errorData)}`);\n        }\n        const data = await response.json();\n        if (!data.choices || !data.choices[0] || !data.choices[0].message) {\n            throw new Error(`DeepSeek API 返回格式错误: ${JSON.stringify(data)}`);\n        }\n        return data.choices[0].message.content.trim();\n    } catch (error) {\n        console.error(\"DeepSeek 翻译错误:\", error);\n        throw new Error(`DeepSeek翻译失败: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n/**\n * 使用百度翻译API进行翻译\n * @param text 要翻译的文本\n * @param targetLanguage 目标语言\n * @returns 翻译后的文本\n */ async function translateWithBaidu(text, targetLanguage) {\n    try {\n        // 获取API密钥\n        const appId = process.env.BAIDU_APP_ID;\n        const appKey = process.env.BAIDU_APP_KEY;\n        if (!appId || !appKey) {\n            throw new Error(\"未配置百度翻译API密钥\");\n        }\n        // 构建API请求\n        const salt = Date.now().toString();\n        const sign = await generateMD5(`${appId}${text}${salt}${appKey}`);\n        const params = new URLSearchParams({\n            q: text,\n            from: \"auto\",\n            to: getBaiduLanguageCode(targetLanguage),\n            appid: appId,\n            salt: salt,\n            sign: sign\n        });\n        const response = await fetch(`https://api.fanyi.baidu.com/api/trans/vip/translate?${params.toString()}`);\n        const data = await response.json();\n        if (data.error_code) {\n            throw new Error(`百度翻译API错误: ${data.error_code} - ${data.error_msg}`);\n        }\n        return data.trans_result.map((item)=>item.dst).join(\"\\n\");\n    } catch (error) {\n        throw new Error(`百度翻译失败: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n/**\n * 使用谷歌翻译API进行翻译\n * @param text 要翻译的文本\n * @param targetLanguage 目标语言\n * @returns 翻译后的文本\n */ async function translateWithGoogle(text, targetLanguage) {\n    try {\n        // 获取API密钥\n        const apiKey = process.env.GOOGLE_API_KEY;\n        if (!apiKey) {\n            throw new Error(\"未配置谷歌翻译API密钥\");\n        }\n        // 构建API请求\n        const response = await fetch(`https://translation.googleapis.com/language/translate/v2?key=${apiKey}`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                q: text,\n                target: getGoogleLanguageCode(targetLanguage),\n                format: \"text\"\n            })\n        });\n        const data = await response.json();\n        if (data.error) {\n            throw new Error(`谷歌翻译API错误: ${data.error.message}`);\n        }\n        return data.data.translations[0].translatedText;\n    } catch (error) {\n        throw new Error(`谷歌翻译失败: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n/**\n * 生成MD5哈希（用于百度翻译API）\n * @param text 要哈希的文本\n * @returns MD5哈希值\n */ async function generateMD5(text) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(text);\n    const hashBuffer = await crypto.subtle.digest(\"MD5\", data);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map((b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n}\n/**\n * 获取语言名称\n * @param targetLanguage 目标语言代码\n * @returns 语言名称\n */ function getLanguageName(targetLanguage) {\n    const languageMap = {\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"繁体中文\",\n        \"en-US\": \"美式英语\",\n        \"en-GB\": \"英式英语\",\n        \"ja-JP\": \"日语\",\n        \"ko-KR\": \"韩语\",\n        \"fr-FR\": \"法语\",\n        \"de-DE\": \"德语\",\n        \"es-ES\": \"西班牙语\",\n        \"ru-RU\": \"俄语\",\n        \"it-IT\": \"意大利语\",\n        \"pt-PT\": \"葡萄牙语\"\n    };\n    return languageMap[targetLanguage] || targetLanguage;\n}\n/**\n * 获取百度翻译API的语言代码\n * @param targetLanguage 目标语言代码\n * @returns 百度翻译API的语言代码\n */ function getBaiduLanguageCode(targetLanguage) {\n    const languageMap = {\n        \"zh-CN\": \"zh\",\n        \"zh-TW\": \"cht\",\n        \"en-US\": \"en\",\n        \"en-GB\": \"en\",\n        \"ja-JP\": \"jp\",\n        \"ko-KR\": \"kor\",\n        \"fr-FR\": \"fra\",\n        \"de-DE\": \"de\",\n        \"es-ES\": \"spa\",\n        \"ru-RU\": \"ru\",\n        \"it-IT\": \"it\",\n        \"pt-PT\": \"pt\"\n    };\n    return languageMap[targetLanguage] || \"en\";\n}\n/**\n * 获取谷歌翻译API的语言代码\n * @param targetLanguage 目标语言代码\n * @returns 谷歌翻译API的语言代码\n */ function getGoogleLanguageCode(targetLanguage) {\n    const languageMap = {\n        \"zh-CN\": \"zh-CN\",\n        \"zh-TW\": \"zh-TW\",\n        \"en-US\": \"en\",\n        \"en-GB\": \"en-GB\",\n        \"ja-JP\": \"ja\",\n        \"ko-KR\": \"ko\",\n        \"fr-FR\": \"fr\",\n        \"de-DE\": \"de\",\n        \"es-ES\": \"es\",\n        \"ru-RU\": \"ru\",\n        \"it-IT\": \"it\",\n        \"pt-PT\": \"pt\"\n    };\n    return languageMap[targetLanguage] || \"en\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/translators/index.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftranslate%2Froute&page=%2Fapi%2Ftranslate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftranslate%2Froute.ts&appDir=%2FUsers%2Fjobssu%2FDesktop%2Fmyhos%2Fpdf-translator%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjobssu%2FDesktop%2Fmyhos%2Fpdf-translator&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();